<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木杰の博客</title>
  
  <subtitle>记录生活中的点点滴滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mxsail.com/"/>
  <updated>2019-07-05T12:04:49.878Z</updated>
  <id>https://mxsail.com/</id>
  
  <author>
    <name>木杰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决hibernate自动生产的表字段顺序与实体类顺序不一致的问题</title>
    <link href="https://mxsail.com/2019/07/05/%E8%A7%A3%E5%86%B3hibernate%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E7%9A%84%E8%A1%A8%E5%AD%97%E6%AE%B5%E9%A1%BA%E5%BA%8F%E4%B8%8E%E5%AE%9E%E4%BD%93%E7%B1%BB%E9%A1%BA%E5%BA%8F%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://mxsail.com/2019/07/05/解决hibernate自动生成的表字段顺序与实体类顺序不一致的问题/</id>
    <published>2019-07-05T12:02:51.000Z</published>
    <updated>2019-07-05T12:04:49.878Z</updated>
    
    <content type="html"><![CDATA[<p>重写hibernate的PropertyContainer,使创建的表的顺序与实体类顺序一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.hibernate.cfg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.AnnotationException;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.MappingException;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.ManyToAny;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.Target;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.Type;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.common.reflection.XClass;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.common.reflection.XProperty;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.boot.jaxb.Origin;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.boot.jaxb.SourceType;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.annotations.HCANNHelper;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.internal.CoreMessageLogger;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.internal.util.StringHelper;</span><br><span class="line"><span class="keyword">import</span> org.jboss.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 重写hibernate的PropertyContainer,使创建的表的顺序与实体类顺序一致</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PropertyContainer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> CoreMessageLogger LOG = Logger.getMessageLogger(CoreMessageLogger.class, PropertyContainer.class.getName());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The class for which this container is created.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> XClass xClass;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> XClass entityAtStake;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Holds the AccessType indicated for use at the class/container-level for cases where persistent attribute</span></span><br><span class="line"><span class="comment">     * did not specify.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AccessType classLevelAccessType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LinkedHashMap&lt;String, XProperty&gt; persistentAttributeMap;</span><br><span class="line"></span><br><span class="line">    PropertyContainer(XClass clazz, XClass entityAtStake, AccessType defaultClassLevelAccessType) &#123;</span><br><span class="line">        <span class="keyword">this</span>.xClass = clazz;</span><br><span class="line">        <span class="keyword">this</span>.entityAtStake = entityAtStake;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( defaultClassLevelAccessType == AccessType.DEFAULT ) &#123;</span><br><span class="line">            <span class="comment">// this is effectively what the old code did when AccessType.DEFAULT was passed in</span></span><br><span class="line">            <span class="comment">// to getProperties(AccessType) from AnnotationBinder and InheritanceState</span></span><br><span class="line">            defaultClassLevelAccessType = AccessType.PROPERTY;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        AccessType localClassLevelAccessType = determineLocalClassDefinedAccessStrategy();</span><br><span class="line">        <span class="keyword">assert</span> localClassLevelAccessType != <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.classLevelAccessType = localClassLevelAccessType != AccessType.DEFAULT</span><br><span class="line">                ? localClassLevelAccessType</span><br><span class="line">                : defaultClassLevelAccessType;</span><br><span class="line">        <span class="keyword">assert</span> classLevelAccessType == AccessType.FIELD || classLevelAccessType == AccessType.PROPERTY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.persistentAttributeMap = <span class="keyword">new</span> LinkedHashMap&lt;String, XProperty&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;XProperty&gt; fields = xClass.getDeclaredProperties( AccessType.FIELD.getType() );</span><br><span class="line">        <span class="keyword">final</span> List&lt;XProperty&gt; getters = xClass.getDeclaredProperties( AccessType.PROPERTY.getType() );</span><br><span class="line"></span><br><span class="line">        preFilter( fields, getters );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Map&lt;String,XProperty&gt; persistentAttributesFromGetters = <span class="keyword">new</span> HashMap&lt;String, XProperty&gt;();</span><br><span class="line"></span><br><span class="line">        collectPersistentAttributesUsingLocalAccessType(</span><br><span class="line">                persistentAttributeMap,</span><br><span class="line">                persistentAttributesFromGetters,</span><br><span class="line">                fields,</span><br><span class="line">                getters</span><br><span class="line">        );</span><br><span class="line">        collectPersistentAttributesUsingClassLevelAccessType(</span><br><span class="line">                persistentAttributeMap,</span><br><span class="line">                persistentAttributesFromGetters,</span><br><span class="line">                fields,</span><br><span class="line">                getters</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">preFilter</span><span class="params">(List&lt;XProperty&gt; fields, List&lt;XProperty&gt; getters)</span> </span>&#123;</span><br><span class="line">        Iterator&lt;XProperty&gt; propertyIterator = fields.iterator();</span><br><span class="line">        <span class="keyword">while</span> ( propertyIterator.hasNext() ) &#123;</span><br><span class="line">            <span class="keyword">final</span> XProperty property = propertyIterator.next();</span><br><span class="line">            <span class="keyword">if</span> ( mustBeSkipped( property ) ) &#123;</span><br><span class="line">                propertyIterator.remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        propertyIterator = getters.iterator();</span><br><span class="line">        <span class="keyword">while</span> ( propertyIterator.hasNext() ) &#123;</span><br><span class="line">            <span class="keyword">final</span> XProperty property = propertyIterator.next();</span><br><span class="line">            <span class="keyword">if</span> ( mustBeSkipped( property ) ) &#123;</span><br><span class="line">                propertyIterator.remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">collectPersistentAttributesUsingLocalAccessType</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            LinkedHashMap&lt;String, XProperty&gt; persistentAttributeMap,</span></span></span><br><span class="line"><span class="function"><span class="params">            Map&lt;String,XProperty&gt; persistentAttributesFromGetters,</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;XProperty&gt; fields,</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;XProperty&gt; getters)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check fields...</span></span><br><span class="line">        Iterator&lt;XProperty&gt; propertyIterator = fields.iterator();</span><br><span class="line">        <span class="keyword">while</span> ( propertyIterator.hasNext() ) &#123;</span><br><span class="line">            <span class="keyword">final</span> XProperty xProperty = propertyIterator.next();</span><br><span class="line">            <span class="keyword">final</span> Access localAccessAnnotation = xProperty.getAnnotation( Access.class );</span><br><span class="line">            <span class="keyword">if</span> ( localAccessAnnotation == <span class="keyword">null</span></span><br><span class="line">                    || localAccessAnnotation.value() != javax.persistence.AccessType.FIELD ) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            propertyIterator.remove();</span><br><span class="line">            persistentAttributeMap.put( xProperty.getName(), xProperty );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check getters...</span></span><br><span class="line">        propertyIterator = getters.iterator();</span><br><span class="line">        <span class="keyword">while</span> ( propertyIterator.hasNext() ) &#123;</span><br><span class="line">            <span class="keyword">final</span> XProperty xProperty = propertyIterator.next();</span><br><span class="line">            <span class="keyword">final</span> Access localAccessAnnotation = xProperty.getAnnotation( Access.class );</span><br><span class="line">            <span class="keyword">if</span> ( localAccessAnnotation == <span class="keyword">null</span></span><br><span class="line">                    || localAccessAnnotation.value() != javax.persistence.AccessType.PROPERTY ) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            propertyIterator.remove();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> String name = xProperty.getName();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// HHH-10242 detect registration of the same property getter twice - eg boolean isId() + UUID getId()</span></span><br><span class="line">            <span class="keyword">final</span> XProperty previous = persistentAttributesFromGetters.get( name );</span><br><span class="line">            <span class="keyword">if</span> ( previous != <span class="keyword">null</span> ) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> org.hibernate.boot.MappingException(</span><br><span class="line">                        LOG.ambiguousPropertyMethods(</span><br><span class="line">                                xClass.getName(),</span><br><span class="line">                                HCANNHelper.annotatedElementSignature( previous ),</span><br><span class="line">                                HCANNHelper.annotatedElementSignature( xProperty )</span><br><span class="line">                        ),</span><br><span class="line">                        <span class="keyword">new</span> Origin( SourceType.ANNOTATION, xClass.getName() )</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            persistentAttributeMap.put( name, xProperty );</span><br><span class="line">            persistentAttributesFromGetters.put( name, xProperty );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">collectPersistentAttributesUsingClassLevelAccessType</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            LinkedHashMap&lt;String, XProperty&gt; persistentAttributeMap,</span></span></span><br><span class="line"><span class="function"><span class="params">            Map&lt;String,XProperty&gt; persistentAttributesFromGetters,</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;XProperty&gt; fields,</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;XProperty&gt; getters)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( classLevelAccessType == AccessType.FIELD ) &#123;</span><br><span class="line">            <span class="keyword">for</span> ( XProperty field : fields ) &#123;</span><br><span class="line">                <span class="keyword">if</span> ( persistentAttributeMap.containsKey( field.getName() ) ) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                persistentAttributeMap.put( field.getName(), field );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> ( XProperty getter : getters ) &#123;</span><br><span class="line">                <span class="keyword">final</span> String name = getter.getName();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// HHH-10242 detect registration of the same property getter twice - eg boolean isId() + UUID getId()</span></span><br><span class="line">                <span class="keyword">final</span> XProperty previous = persistentAttributesFromGetters.get( name );</span><br><span class="line">                <span class="keyword">if</span> ( previous != <span class="keyword">null</span> ) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> org.hibernate.boot.MappingException(</span><br><span class="line">                            LOG.ambiguousPropertyMethods(</span><br><span class="line">                                    xClass.getName(),</span><br><span class="line">                                    HCANNHelper.annotatedElementSignature( previous ),</span><br><span class="line">                                    HCANNHelper.annotatedElementSignature( getter )</span><br><span class="line">                            ),</span><br><span class="line">                            <span class="keyword">new</span> Origin( SourceType.ANNOTATION, xClass.getName() )</span><br><span class="line">                    );</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ( persistentAttributeMap.containsKey( name ) ) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                persistentAttributeMap.put( getter.getName(), getter );</span><br><span class="line">                persistentAttributesFromGetters.put( name, getter );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XClass <span class="title">getEntityAtStake</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> entityAtStake;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XClass <span class="title">getDeclaringClass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> xClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AccessType <span class="title">getClassLevelAccessType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> classLevelAccessType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;XProperty&gt; <span class="title">getProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        assertTypesAreResolvable();</span><br><span class="line">        <span class="keyword">return</span> Collections.unmodifiableCollection( persistentAttributeMap.values() );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">assertTypesAreResolvable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ( XProperty xProperty : persistentAttributeMap.values() ) &#123;</span><br><span class="line">            <span class="keyword">if</span> ( !xProperty.isTypeResolved() &amp;&amp; !discoverTypeWithoutReflection( xProperty ) ) &#123;</span><br><span class="line">                String msg = <span class="string">"Property "</span> + StringHelper.qualify( xClass.getName(), xProperty.getName() ) +</span><br><span class="line">                        <span class="string">" has an unbound type and no explicit target entity. Resolve this Generic usage issue"</span> +</span><br><span class="line">                        <span class="string">" or set an explicit target attribute (eg @OneToMany(target=) or use an explicit @Type"</span>;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> AnnotationException( msg );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> AccessType <span class="title">determineLocalClassDefinedAccessStrategy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        AccessType classDefinedAccessType;</span><br><span class="line"></span><br><span class="line">        AccessType hibernateDefinedAccessType = AccessType.DEFAULT;</span><br><span class="line">        AccessType jpaDefinedAccessType = AccessType.DEFAULT;</span><br><span class="line"></span><br><span class="line">        org.hibernate.annotations.AccessType accessType = xClass.getAnnotation( org.hibernate.annotations.AccessType.class );</span><br><span class="line">        <span class="keyword">if</span> ( accessType != <span class="keyword">null</span> ) &#123;</span><br><span class="line">            hibernateDefinedAccessType = AccessType.getAccessStrategy( accessType.value() );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Access access = xClass.getAnnotation( Access.class );</span><br><span class="line">        <span class="keyword">if</span> ( access != <span class="keyword">null</span> ) &#123;</span><br><span class="line">            jpaDefinedAccessType = AccessType.getAccessStrategy( access.value() );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( hibernateDefinedAccessType != AccessType.DEFAULT</span><br><span class="line">                &amp;&amp; jpaDefinedAccessType != AccessType.DEFAULT</span><br><span class="line">                &amp;&amp; hibernateDefinedAccessType != jpaDefinedAccessType ) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MappingException(</span><br><span class="line">                    <span class="string">"@AccessType and @Access specified with contradicting values. Use of @Access only is recommended. "</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( hibernateDefinedAccessType != AccessType.DEFAULT ) &#123;</span><br><span class="line">            classDefinedAccessType = hibernateDefinedAccessType;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            classDefinedAccessType = jpaDefinedAccessType;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> classDefinedAccessType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">discoverTypeWithoutReflection</span><span class="params">(XProperty p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( p.isAnnotationPresent( OneToOne.class ) &amp;&amp; !p.getAnnotation( OneToOne.class )</span><br><span class="line">                .targetEntity()</span><br><span class="line">                .equals( <span class="keyword">void</span>.class ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( p.isAnnotationPresent( OneToMany.class ) &amp;&amp; !p.getAnnotation( OneToMany.class )</span><br><span class="line">                .targetEntity()</span><br><span class="line">                .equals( <span class="keyword">void</span>.class ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( p.isAnnotationPresent( ManyToOne.class ) &amp;&amp; !p.getAnnotation( ManyToOne.class )</span><br><span class="line">                .targetEntity()</span><br><span class="line">                .equals( <span class="keyword">void</span>.class ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( p.isAnnotationPresent( ManyToMany.class ) &amp;&amp; !p.getAnnotation( ManyToMany.class )</span><br><span class="line">                .targetEntity()</span><br><span class="line">                .equals( <span class="keyword">void</span>.class ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( p.isAnnotationPresent( org.hibernate.annotations.Any.class ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( p.isAnnotationPresent( ManyToAny.class ) ) &#123;</span><br><span class="line">            <span class="keyword">if</span> ( !p.isCollection() &amp;&amp; !p.isArray() ) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> AnnotationException( <span class="string">"@ManyToAny used on a non collection non array property: "</span> + p.getName() );</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( p.isAnnotationPresent( Type.class ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( p.isAnnotationPresent( Target.class ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">mustBeSkipped</span><span class="params">(XProperty property)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//TODO make those hardcoded tests more portable (through the bytecode provider?)</span></span><br><span class="line">        <span class="keyword">return</span> property.isAnnotationPresent( Transient.class )</span><br><span class="line">                || <span class="string">"net.sf.cglib.transform.impl.InterceptFieldCallback"</span>.equals( property.getType().getName() )</span><br><span class="line">                || <span class="string">"org.hibernate.bytecode.internal.javassist.FieldHandler"</span>.equals( property.getType().getName() );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;重写hibernate的PropertyContainer,使创建的表的顺序与实体类顺序一致&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1
      
    
    </summary>
    
      <category term="java" scheme="https://mxsail.com/categories/java/"/>
    
    
      <category term="hibernate" scheme="https://mxsail.com/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>javaWeb应用防止xss攻击</title>
    <link href="https://mxsail.com/2019/07/05/javaWeb%E5%BA%94%E7%94%A8%E9%98%B2%E6%AD%A2xss%E6%94%BB%E5%87%BB/"/>
    <id>https://mxsail.com/2019/07/05/javaWeb应用防止xss攻击/</id>
    <published>2019-07-05T11:59:47.000Z</published>
    <updated>2019-07-06T09:02:55.033Z</updated>
    
    <content type="html"><![CDATA[<p>1 . pom中增加依赖 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- xss过滤组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2 . 增加标签处理类 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xbz.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.safety.Whitelist;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> ** xss非法标签过滤工具类*</span></span><br><span class="line"><span class="comment"> ** 过滤html中的xss字符*</span></span><br><span class="line"><span class="comment"> *** *<span class="doctag">@author</span>* *xbz*</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsoupUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="comment">/***</span></span><br><span class="line"><span class="comment">​     ** 使用自带的basicWithImages 白名单*</span></span><br><span class="line"><span class="comment">​     ** 允许的便签有a,b,blockquote,br,cite,code,dd,dl,dt,em,i,li,ol,p,pre,q,small,span,*</span></span><br><span class="line"><span class="comment">​     ** strike,strong,sub,sup,u,ul,img*</span></span><br><span class="line"><span class="comment">​     ** 以及a标签的href,img标签的src,align,alt,height,width,title属性*</span></span><br><span class="line"><span class="comment">​     **/</span></span><br><span class="line">​    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Whitelist whitelist = Whitelist.basicWithImages();</span><br><span class="line">​    <span class="comment">/** 配置过滤化参数,不对代码进行格式化 \*/</span></span><br><span class="line">​    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Document.OutputSettings outputSettings = <span class="keyword">new</span> Document.OutputSettings().prettyPrint(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">static</span> &#123;</span><br><span class="line">​        <span class="comment">// 富文本编辑时一些样式是使用style来进行实现的*</span></span><br><span class="line">​        <span class="comment">// 比如红色字体 style="color:red;"*</span></span><br><span class="line">​        <span class="comment">// 所以需要给所有标签添加style属性*</span></span><br><span class="line">​        whitelist.addAttributes(<span class="string">":all"</span>, <span class="string">"style"</span>);</span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">clean</span><span class="params">(String *content*)</span> </span>&#123;</span><br><span class="line">​        <span class="keyword">if</span>(StringUtils.isNotBlank(content))&#123;</span><br><span class="line">​            content = content.trim();</span><br><span class="line">​        &#125;</span><br><span class="line">​        <span class="keyword">return</span> Jsoup.clean(content, <span class="string">""</span>, whitelist, outputSettings);</span><br><span class="line">​    &#125;</span><br><span class="line">​    </span><br><span class="line">​    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] *args*)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">​        String text = <span class="string">"   &lt;a href=\"http://www.baidu.com/a\" onclick=\"alert(1);\"&gt;sss&lt;/a&gt;&lt;script&gt;alert(0);&lt;/script&gt;sss   "</span>;</span><br><span class="line">​        System.out.println(clean(text));</span><br><span class="line">​    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3 . 重写请求参数处理函数 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xbz.web.common.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xbz.utils.JsoupUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** </span></span><br><span class="line"><span class="comment"> ** &lt;code&gt;&#123;<span class="doctag">@link</span> XssHttpServletRequestWrapper&#125;&lt;/code&gt;*</span></span><br><span class="line"><span class="comment"> *** *<span class="doctag">@author</span>*</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XssHttpServletRequestWrapper</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;  </span><br><span class="line">​    HttpServletRequest orgRequest = <span class="keyword">null</span>;  </span><br><span class="line">​    <span class="keyword">private</span> <span class="keyword">boolean</span> isIncludeRichText = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="function"><span class="keyword">public</span> <span class="title">XssHttpServletRequestWrapper</span><span class="params">(HttpServletRequest *request*, <span class="keyword">boolean</span> *isIncludeRichText*)</span> </span>&#123;  </span><br><span class="line">​        <span class="keyword">super</span>(request);  </span><br><span class="line">​        orgRequest = request;</span><br><span class="line">​        <span class="keyword">this</span>.isIncludeRichText = isIncludeRichText;</span><br><span class="line">​    &#125;  </span><br><span class="line"></span><br><span class="line">​    <span class="comment">/*** </span></span><br><span class="line"><span class="comment">​    ** 覆盖getParameter方法，将参数名和参数值都做xss过滤。&lt;br/&gt;* </span></span><br><span class="line"><span class="comment">​    ** 如果需要获得原始的值，则通过super.getParameterValues(name)来获取&lt;br/&gt;* </span></span><br><span class="line"><span class="comment">​    ** getParameterNames,getParameterValues和getParameterMap也可能需要覆盖* </span></span><br><span class="line"><span class="comment">​    **/</span>  </span><br><span class="line">​    <span class="meta">@Override</span>  </span><br><span class="line">​    <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String *name*)</span> </span>&#123;</span><br><span class="line">​        Boolean flag = (<span class="string">"content"</span>.equals(name) || name.endsWith(<span class="string">"WithHtml"</span>));</span><br><span class="line">​        <span class="keyword">if</span>( flag &amp;&amp; !isIncludeRichText)&#123;</span><br><span class="line">​            <span class="keyword">return</span> <span class="keyword">super</span>.getParameter(name);</span><br><span class="line">​        &#125;</span><br><span class="line">​        name = JsoupUtil.clean(name);</span><br><span class="line">​        String value = <span class="keyword">super</span>.getParameter(name);  </span><br><span class="line">​        <span class="keyword">if</span> (StringUtils.isNotBlank(value)) &#123;</span><br><span class="line">​            value = JsoupUtil.clean(value);</span><br><span class="line">​        &#125;</span><br><span class="line">​        <span class="keyword">return</span> value;  </span><br><span class="line">​    &#125;  </span><br><span class="line">​    </span><br><span class="line">​    <span class="meta">@Override</span></span><br><span class="line">​    <span class="keyword">public</span> String[] getParameterValues(String *name*) &#123;</span><br><span class="line">​        String[] arr = <span class="keyword">super</span>.getParameterValues(name);</span><br><span class="line">​        <span class="keyword">if</span>(arr != <span class="keyword">null</span>)&#123;</span><br><span class="line">​            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length;i++) &#123;</span><br><span class="line">​                arr[i] = JsoupUtil.clean(arr[i]);</span><br><span class="line">​            &#125;</span><br><span class="line">​        &#125;</span><br><span class="line">​        <span class="keyword">return</span> arr;</span><br><span class="line">​    &#125;</span><br><span class="line">​    </span><br><span class="line">​    <span class="comment">/*** </span></span><br><span class="line"><span class="comment">​    ** 覆盖getHeader方法，将参数名和参数值都做xss过滤。&lt;br/&gt;* </span></span><br><span class="line"><span class="comment">​    ** 如果需要获得原始的值，则通过super.getHeaders(name)来获取&lt;br/&gt;* </span></span><br><span class="line"><span class="comment">​    ** getHeaderNames 也可能需要覆盖* </span></span><br><span class="line"><span class="comment">​    **/</span>  </span><br><span class="line">​    <span class="meta">@Override</span>  </span><br><span class="line">​    <span class="function"><span class="keyword">public</span> String <span class="title">getHeader</span><span class="params">(String *name*)</span> </span>&#123;  </span><br><span class="line">​        name = JsoupUtil.clean(name);</span><br><span class="line">​        String value = <span class="keyword">super</span>.getHeader(name);  </span><br><span class="line">​        <span class="keyword">if</span> (StringUtils.isNotBlank(value)) &#123;  </span><br><span class="line">​            value = JsoupUtil.clean(value); </span><br><span class="line">​        &#125;  </span><br><span class="line">​        <span class="keyword">return</span> value;  </span><br><span class="line">​    &#125;  </span><br><span class="line"></span><br><span class="line">​    <span class="comment">/*** </span></span><br><span class="line"><span class="comment">​    ** 获取最原始的request* </span></span><br><span class="line"><span class="comment">​    *** </span></span><br><span class="line"><span class="comment">​    *** *<span class="doctag">@return</span>* </span></span><br><span class="line"><span class="comment">​    **/</span></span><br><span class="line">​    <span class="function"><span class="keyword">public</span> HttpServletRequest <span class="title">getOrgRequest</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">​        <span class="keyword">return</span> orgRequest;  </span><br><span class="line">​    &#125;  </span><br><span class="line"></span><br><span class="line">​    <span class="comment">/*** </span></span><br><span class="line"><span class="comment">​    ** 获取最原始的request的静态方法* </span></span><br><span class="line"><span class="comment">​    *** </span></span><br><span class="line"><span class="comment">​    *** *<span class="doctag">@return</span>* </span></span><br><span class="line"><span class="comment">​    **/</span>  </span><br><span class="line">​    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpServletRequest <span class="title">getOrgRequest</span><span class="params">(HttpServletRequest *req*)</span> </span>&#123;  </span><br><span class="line">​        <span class="keyword">if</span> (req <span class="keyword">instanceof</span> XssHttpServletRequestWrapper) &#123;  </span><br><span class="line">​            <span class="keyword">return</span> ((XssHttpServletRequestWrapper) req).getOrgRequest();  </span><br><span class="line">​        &#125;  </span><br><span class="line">​        <span class="keyword">return</span> req;  </span><br><span class="line">​    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4 . 编写XSSFilter </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xbz.web.common.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.BooleanUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** </span></span><br><span class="line"><span class="comment"> ** 拦截防止xss注入*</span></span><br><span class="line"><span class="comment"> ** 通过Jsoup过滤请求参数内的特定字符*</span></span><br><span class="line"><span class="comment"> *** *<span class="doctag">@author</span>* *yangwk* </span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XssFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;  </span><br><span class="line">​    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LogManager.getLogger();</span><br><span class="line">​    <span class="comment">/***</span></span><br><span class="line"><span class="comment">​     ** 是否过滤富文本内容*</span></span><br><span class="line"><span class="comment">​     **/</span></span><br><span class="line">​    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> IS_INCLUDE_RICH_TEXT = <span class="keyword">false</span>;​    </span><br><span class="line">​    <span class="keyword">public</span> List&lt;String&gt; excludes = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">​    <span class="meta">@Override</span></span><br><span class="line">​    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest *request*, ServletResponse *response*, FilterChain *filterChain*)</span> <span class="keyword">throws</span> IOException,ServletException </span>&#123;</span><br><span class="line">​        <span class="keyword">if</span>(logger.isDebugEnabled())&#123;</span><br><span class="line">​            logger.debug(<span class="string">"xss filter is open"</span>);</span><br><span class="line">​        &#125;</span><br><span class="line">​        </span><br><span class="line">​        HttpServletRequest req = (HttpServletRequest) request;</span><br><span class="line">​        HttpServletResponse resp = (HttpServletResponse) response;</span><br><span class="line">​        <span class="keyword">if</span>(handleExcludeURL(req, resp))&#123;</span><br><span class="line">​            filterChain.doFilter(request, response);</span><br><span class="line">​            <span class="keyword">return</span>;</span><br><span class="line">​        &#125;</span><br><span class="line">​        </span><br><span class="line">​        XssHttpServletRequestWrapper xssRequest = <span class="keyword">new</span> XssHttpServletRequestWrapper((HttpServletRequest) request,IS_INCLUDE_RICH_TEXT);</span><br><span class="line">​        filterChain.doFilter(xssRequest, response);</span><br><span class="line">​    &#125;</span><br><span class="line">​    </span><br><span class="line">​    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">handleExcludeURL</span><span class="params">(HttpServletRequest *request*, HttpServletResponse *response*)</span> </span>&#123;</span><br><span class="line">​        <span class="keyword">if</span> (excludes == <span class="keyword">null</span> || excludes.isEmpty()) &#123;</span><br><span class="line">​            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">​        &#125;</span><br><span class="line">​        String url = request.getServletPath();</span><br><span class="line">​        <span class="keyword">for</span> (String pattern : excludes) &#123;</span><br><span class="line">​            Pattern p = Pattern.compile(<span class="string">"^"</span> + pattern);</span><br><span class="line">​            Matcher m = p.matcher(url);</span><br><span class="line">​            <span class="keyword">if</span> (m.find()) &#123;</span><br><span class="line">​                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">​            &#125;</span><br><span class="line">​        &#125;</span><br><span class="line">​        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="meta">@Override</span></span><br><span class="line">​    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig *filterConfig*)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">​        <span class="keyword">if</span>(logger.isDebugEnabled())&#123;</span><br><span class="line">​            logger.debug(<span class="string">"xss filter init ===================="</span>);</span><br><span class="line">​        &#125;</span><br><span class="line">​        String isIncludeRichText = filterConfig.getInitParameter(<span class="string">"isIncludeRichText"</span>);</span><br><span class="line">​        <span class="keyword">if</span>(StringUtils.isNotBlank(isIncludeRichText))&#123;</span><br><span class="line">​            IS_INCLUDE_RICH_TEXT = BooleanUtils.toBoolean(isIncludeRichText);</span><br><span class="line">​        &#125;</span><br><span class="line">​        </span><br><span class="line">​        String temp = filterConfig.getInitParameter(<span class="string">"excludes"</span>);</span><br><span class="line">​        <span class="keyword">if</span> (temp != <span class="keyword">null</span>) &#123;</span><br><span class="line">​            String[] url = temp.split(<span class="string">","</span>);</span><br><span class="line">​            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; url != <span class="keyword">null</span> &amp;&amp; i &lt; url.length; i++) &#123;</span><br><span class="line">​                excludes.add(url[i]);</span><br><span class="line">​            &#125;</span><br><span class="line">​        &#125;</span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="meta">@Override</span></span><br><span class="line">​    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5 .  增加XSS配置 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xbz.web.common.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xbz.web.common.filter.XssFilter;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XssConfig</span></span>&#123;</span><br><span class="line">​    <span class="comment">/***</span></span><br><span class="line"><span class="comment">​     ** xss过滤拦截器*</span></span><br><span class="line"><span class="comment">​     **/</span></span><br><span class="line">​    <span class="meta">@Bean</span></span><br><span class="line">​    <span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">xssFilterRegistrationBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">​        FilterRegistrationBean filterRegistrationBean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">​        filterRegistrationBean.setFilter(<span class="keyword">new</span> XssFilter());</span><br><span class="line">​        filterRegistrationBean.setOrder(<span class="number">1</span>);</span><br><span class="line">​        filterRegistrationBean.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">​        filterRegistrationBean.addUrlPatterns(<span class="string">"/*"</span>);</span><br><span class="line">​        Map&lt;String, String&gt; initParameters = Maps.newHashMap();</span><br><span class="line">​        initParameters.put(<span class="string">"excludes"</span>, <span class="string">"/favicon.ico,/img/*,/js/*,/css/*"</span>);</span><br><span class="line">​        initParameters.put(<span class="string">"isIncludeRichText"</span>, <span class="string">"true"</span>);</span><br><span class="line">​        filterRegistrationBean.setInitParameters(initParameters);</span><br><span class="line">​        <span class="keyword">return</span> filterRegistrationBean;</span><br><span class="line">​    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1 . pom中增加依赖 &lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
      <category term="java" scheme="https://mxsail.com/categories/java/"/>
    
    
      <category term="xss" scheme="https://mxsail.com/tags/xss/"/>
    
      <category term="javaWeb" scheme="https://mxsail.com/tags/javaWeb/"/>
    
  </entry>
  
  <entry>
    <title>windows常用命令</title>
    <link href="https://mxsail.com/2019/07/05/windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://mxsail.com/2019/07/05/windows常用命令/</id>
    <published>2019-07-05T11:57:37.000Z</published>
    <updated>2019-07-05T11:58:51.543Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>查看端口占用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -aon|findstr <span class="string">"8080"</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>查看具体的进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist|findstr <span class="string">"4416"</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>终止某个进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /F /T /IM nginx.exe</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看端口占用&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class
      
    
    </summary>
    
      <category term="windows" scheme="https://mxsail.com/categories/windows/"/>
    
    
      <category term="cmd" scheme="https://mxsail.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>Oracle创建数据库</title>
    <link href="https://mxsail.com/2019/07/05/Oracle%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://mxsail.com/2019/07/05/Oracle创建数据库/</id>
    <published>2019-07-05T11:55:04.000Z</published>
    <updated>2019-07-05T11:55:57.532Z</updated>
    
    <content type="html"><![CDATA[<p>表空间：tablespace为表空间名;datafile为存放.dbf文件的路径</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">tablespace</span> struts2 <span class="keyword">datafile</span> <span class="string">'E:\oracle\dmp\struts2.dbf'</span> <span class="keyword">size</span> <span class="number">500</span>m</span><br></pre></td></tr></table></figure><p>用户：用户名struts2   密码 1  默认表空间名struts2 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> struts2 <span class="keyword">identified</span> <span class="keyword">by</span> <span class="number">1</span> <span class="keyword">default</span> <span class="keyword">tablespace</span> struts2 <span class="keyword">quota</span> <span class="keyword">unlimited</span> <span class="keyword">on</span> struts2;</span><br></pre></td></tr></table></figure><p>给用户分配权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> struts2;</span><br></pre></td></tr></table></figure><p>分配系统权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">unlimited</span> <span class="keyword">tablespace</span> <span class="keyword">to</span> struts2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">session</span> <span class="keyword">to</span> struts2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;表空间：tablespace为表空间名;datafile为存放.dbf文件的路径&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
      
    
    </summary>
    
      <category term="数据库" scheme="https://mxsail.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="https://mxsail.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>修改oracle字符集为AL32UTF8</title>
    <link href="https://mxsail.com/2019/07/05/%E4%BF%AE%E6%94%B9oracle%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%BAAL32UTF8/"/>
    <id>https://mxsail.com/2019/07/05/修改oracle字符集为AL32UTF8/</id>
    <published>2019-07-05T11:48:49.000Z</published>
    <updated>2019-07-05T11:56:05.403Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[oracle@VM_191_239_centos ~]$ sqlplus /nolog</span><br><span class="line"></span><br><span class="line">SQL&gt; conn /as sysdba</span><br><span class="line">SQL&gt; shutdown immediate;</span><br><span class="line">SQL&gt; startup mount</span><br><span class="line">SQL&gt; ALTER SYSTEM ENABLE RESTRICTED SESSION;</span><br><span class="line">SQL&gt; ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0;</span><br><span class="line">SQL&gt; ALTER SYSTEM SET AQ_TM_PROCESSES=0;</span><br><span class="line">SQL&gt; alter database open;</span><br><span class="line">SQL&gt; ALTER DATABASE CHARACTER SET AL32UTF8;</span><br><span class="line">    ORA-12712: new character <span class="built_in">set</span> must be a superset of old character <span class="built_in">set</span></span><br><span class="line">    --提示我们的字符集：新字符集必须为旧字符集的超集，这时我们可以跳过超集的检查做更改：</span><br><span class="line">SQL&gt; ALTER DATABASE character <span class="built_in">set</span> INTERNAL_USE AL32UTF8;</span><br><span class="line">    --我们看到这个过程和之前ALTER DATABASE CHARACTER SET操作的内部过程是完全相同的，也就是说INTERNAL_USE提供的帮助就是使Oracle数据库绕过了子集与超集的校验.</span><br><span class="line">SQL&gt; select * from v<span class="variable">$nls_parameters</span>; </span><br><span class="line">SQL&gt; shutdown immediate;</span><br><span class="line">SQL&gt; startup</span><br><span class="line">SQL&gt; select * from v<span class="variable">$nls_parameters</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="数据库" scheme="https://mxsail.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="https://mxsail.com/tags/Oracle/"/>
    
      <category term="字符集" scheme="https://mxsail.com/tags/%E5%AD%97%E7%AC%A6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>解决WEB应用接口调用时跨域以及session失效问题</title>
    <link href="https://mxsail.com/2019/07/05/%E8%A7%A3%E5%86%B3WEB%E5%BA%94%E7%94%A8%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E6%97%B6%E8%B7%A8%E5%9F%9F%E4%BB%A5%E5%8F%8Asession%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/"/>
    <id>https://mxsail.com/2019/07/05/解决WEB应用接口调用时跨域以及session失效问题/</id>
    <published>2019-07-05T11:32:32.000Z</published>
    <updated>2019-07-05T12:03:40.233Z</updated>
    
    <content type="html"><![CDATA[<h2 id="场景复现"><a href="#场景复现" class="headerlink" title="场景复现"></a>场景复现</h2><p>springboot应用前后端分离,客户跨域调用开放接口验证验证码时,输入正确的验证码无法通过验证</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>方案一 :直接在 Controller 上使用@CrossOrigin 注解(版本要求Spring MVC4.2 + , 未验证)</p><p>方案二 :重写 Filter 的 doFilter 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.\*;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsFilter</span>  <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123; </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span>  ServletException </span>&#123;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse res, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) res;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest)req;</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>,request.getHeader(<span class="string">"Origin"</span>));</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST, GET, OPTIONS, DELETE"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Max-Age"</span>, <span class="string">"3600"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"x-requested-with"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Credentials"</span>,<span class="string">"true"</span>);</span><br><span class="line">        chain.doFilter(req, res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    前端调用请求时加上: <strong>xhrFields: {withCredentials: true},crossDomain: true</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> $.ajax(&#123;</span><br><span class="line"> type: <span class="string">'POST'</span>,</span><br><span class="line"> url: <span class="string">'/IGI/openPublicApplication/depts'</span>,</span><br><span class="line">      xhrFields: &#123;<span class="attr">withCredentials</span>: <span class="literal">true</span>&#125;, </span><br><span class="line">      crossDomain: <span class="literal">true</span></span><br><span class="line"> data:&#123;</span><br><span class="line">...</span><br><span class="line">&#125;,</span><br><span class="line"> dataType: <span class="string">'json'</span>,</span><br><span class="line"> success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">...</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;场景复现&quot;&gt;&lt;a href=&quot;#场景复现&quot; class=&quot;headerlink&quot; title=&quot;场景复现&quot;&gt;&lt;/a&gt;场景复现&lt;/h2&gt;&lt;p&gt;springboot应用前后端分离,客户跨域调用开放接口验证验证码时,输入正确的验证码无法通过验证&lt;/p&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="java" scheme="https://mxsail.com/categories/java/"/>
    
    
      <category term="api" scheme="https://mxsail.com/tags/api/"/>
    
      <category term="跨域" scheme="https://mxsail.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="java" scheme="https://mxsail.com/tags/java/"/>
    
      <category term="springboot" scheme="https://mxsail.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Apache开启反向代理-windows</title>
    <link href="https://mxsail.com/2019/07/05/Apache%E5%BC%80%E5%90%AF%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-windows/"/>
    <id>https://mxsail.com/2019/07/05/Apache开启反向代理-windows/</id>
    <published>2019-07-05T11:19:18.000Z</published>
    <updated>2019-07-05T11:30:03.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="修改httpd-conf配置文件"><a href="#修改httpd-conf配置文件" class="headerlink" title="修改httpd.conf配置文件"></a>修改httpd.conf配置文件</h1><h2 id="1-反注释以下模块"><a href="#1-反注释以下模块" class="headerlink" title="1. 反注释以下模块"></a>1. 反注释以下模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LoadModule negotiation_module modules/mod_negotiation.so</span><br><span class="line">LoadModule proxy_module modules/mod_proxy.so</span><br><span class="line">LoadModule proxy_ajp_module modules/mod_proxy_ajp.so</span><br><span class="line">LoadModule proxy_balancer_module modules/mod_proxy_balancer.so</span><br><span class="line">LoadModule proxy_connect_module modules/mod_proxy_connect.so</span><br><span class="line">LoadModule proxy_ftp_module modules/mod_proxy_ftp.so</span><br><span class="line">LoadModule proxy_http_module modules/mod_proxy_http.so</span><br><span class="line">LoadModule slotmem_shm_module modules/mod_slotmem_shm.so</span><br></pre></td></tr></table></figure><h2 id="2-设置需要反向代理的url"><a href="#2-设置需要反向代理的url" class="headerlink" title="2. 设置需要反向代理的url"></a>2. 设置需要反向代理的url</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ProxyPass /test http://192.168.200.124/test</span><br><span class="line">ProxyPassReverse /test http://192.168.200.124/test</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;修改httpd-conf配置文件&quot;&gt;&lt;a href=&quot;#修改httpd-conf配置文件&quot; class=&quot;headerlink&quot; title=&quot;修改httpd.conf配置文件&quot;&gt;&lt;/a&gt;修改httpd.conf配置文件&lt;/h1&gt;&lt;h2 id=&quot;1-反注释以下模块
      
    
    </summary>
    
      <category term="备忘录" scheme="https://mxsail.com/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="Apache" scheme="https://mxsail.com/tags/Apache/"/>
    
      <category term="反向代理" scheme="https://mxsail.com/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
      <category term="windows" scheme="https://mxsail.com/tags/windows/"/>
    
  </entry>
  
</feed>
